@mixin make-grid-columns($i: 1, $list: ".col--palm--#{$i}, .col--portable--#{$i}, .col--laptop--#{$i}, .col--desktop--#{$i}") {
    @for $i from (1 + 1) through $grid-columns {
        $list: "#{$list}, .col--palm--#{$i}, .col--portable--#{$i}, .col--laptop--#{$i}, .col--desktop--#{$i}";
    }

    #{$list} {
        position: relative;
        min-height: em(1px);
        padding-left:  ($grid-gutter-width / 2);
        padding-right: ($grid-gutter-width / 2);
    }
}

@mixin float-grid-columns($class, $i: 1, $list: ".col--#{$class}--#{$i}") {
    @for $i from (1 + 1) through $grid-columns {
        $list: "#{$list}, .col--#{$class}--#{$i}";
    }

    #{$list} {
        float: left;
    }
}

@mixin calc-grid-column($index, $class, $type) {
    @if ($type == width) and ($index > 0) {
        .col--#{$class}--#{$index} {
            width: percentage(($index / $grid-columns));
        }
    }

    @if ($type == push) and ($index > 0) {
        .col--#{$class}--push--#{$index} {
            left: percentage(($index / $grid-columns));
        }
    }

    @if ($type == push) and ($index == 0) {
        .col--#{$class}--push--0 {
            left: auto;
        }
    }

    @if ($type == pull) and ($index > 0) {
        .col--#{$class}--pull--#{$index} {
            right: percentage(($index / $grid-columns));
        }
    }

    @if ($type == pull) and ($index == 0) {
        .col--#{$class}--pull--0 {
            right: auto;
        }
    }

    @if ($type == offset) {
        .col--#{$class}--offset--#{$index} {
            margin-left: percentage(($index / $grid-columns));
        }
    }
}

@mixin loop-grid-columns($columns, $class, $type) {
    @for $i from 0 through $columns {
        @include calc-grid-column($i, $class, $type);
    }
}

@mixin make-grid($class) {
    @include float-grid-columns($class);
    @include loop-grid-columns($grid-columns, $class, width);
    @include loop-grid-columns($grid-columns, $class, pull);
    @include loop-grid-columns($grid-columns, $class, push);
    @include loop-grid-columns($grid-columns, $class, offset);
}

@mixin container-fixed($gutter: $grid-gutter-width) {
    margin-right: auto;
    margin-left: auto;
    padding-left:  ($gutter / 2);
    padding-right: ($gutter / 2);
    @include clearfix;
}

@mixin make-group($gutter: $grid-gutter-width) {
    margin-left:  ($gutter / -2);
    margin-right: ($gutter / -2);
    @include clearfix;
}

@mixin make-palm-column($columns, $gutter: $grid-gutter-width) {
    position: relative;
    float: left;
    width: percentage(($columns / $grid-columns));
    min-height: em(1px);
    padding-left:  ($gutter / 2);
    padding-right: ($gutter / 2);
}

@mixin make-palm-column-offset($columns) {
    margin-left: percentage(($columns / $grid-columns));
}

@mixin make-palm-column-push($columns) {
    left: percentage(($columns / $grid-columns));
}

@mixin make-palm-column-pull($columns) {
    right: percentage(($columns / $grid-columns));
}

@mixin make-portable-column($columns, $gutter: $grid-gutter-width) {
    position: relative;
    min-height: em(1px);
    padding-left:  ($gutter / 2);
    padding-right: ($gutter / 2);

    @include portable {
        float: left;
        width: percentage(($columns / $grid-columns));
    }
}
@mixin make-portable-column-offset($columns) {
    @include portable {
      margin-left: percentage(($columns / $grid-columns));
    }
}

@mixin make-portable-column-push($columns) {
    @include portable {
        left: percentage(($columns / $grid-columns));
    }
}

@mixin make-portable-column-pull($columns) {
    @include portable {
        right: percentage(($columns / $grid-columns));
    }
}

@mixin make-laptop-column($columns, $gutter: $grid-gutter-width) {
    position: relative;
    min-height: em(1px);
    padding-left:  ($gutter / 2);
    padding-right: ($gutter / 2);

    @include laptop {
        float: left;
        width: percentage(($columns / $grid-columns));
    }
}

@mixin make-laptop-column-offset($columns) {
    @include laptop {
        margin-left: percentage(($columns / $grid-columns));
    }
}

@mixin make-laptop-column-push($columns) {
    @include laptop {
        left: percentage(($columns / $grid-columns));
    }
}

@mixin make-laptop-column-pull($columns) {
    @include laptop {
        right: percentage(($columns / $grid-columns));
    }
}

@mixin make-desktop-column($columns, $gutter: $grid-gutter-width) {
    position: relative;
    min-height: em(1px);
    padding-left:  ($gutter / 2);
    padding-right: ($gutter / 2);

    @include desktop {
        float: left;
        width: percentage(($columns / $grid-columns));
    }
}

@mixin make-desktop-column-offset($columns) {
    @include desktop {
        margin-left: percentage(($columns / $grid-columns));
    }
}

@mixin make-desktop-column-push($columns) {
    @include desktop {
        left: percentage(($columns / $grid-columns));
    }
}

@mixin make-desktop-column-pull($columns) {
    @include desktop {
        right: percentage(($columns / $grid-columns));
    }
}

@mixin center-block() {
    display: block;
    margin-left: auto;
    margin-right: auto;
}
